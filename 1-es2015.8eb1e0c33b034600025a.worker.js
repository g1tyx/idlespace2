!function(t){var e={};function s(a){if(e[a])return e[a].exports;var o=e[a]={i:a,l:!1,exports:{}};return t[a].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,a){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(s.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(a,o,(function(e){return t[e]}).bind(null,o));return a},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s="SwEk")}({SwEk:function(t,e,s){"use strict";s.r(e);class a{constructor(t){this.shipData=t,this.accumulatedThreat=0,this.armour=t.totalArmour,this.shield=t.totalShield,this.threat=t.threat}}class o{constructor(){this.threatMulti=1}}class n{constructor(){this.quantity=0,this.quantityEnd=0,this.lost=0,this.exploded=0,this.kills=0,this.oneShotted=0,this.oneShotDone=0,this.damageDone=0,this.armourDamageDone=0,this.shieldDamageDone=0,this.damageTaken=0,this.armourDamageTaken=0,this.shieldDamageTaken=0,this.deathTargets=0,this.aliveTargets=0,this.aliveTargetsShield=0,this.aliveTargetsNoShield=0,this.explosionTriggered=0,this.shotTaken=0,this.shotTakenDeath=0,this.shieldRegenerationReceived=0,this.threatAvg=0,this.threatQta=0,this.shipHit=0,this.defenceHit=0}}class i{constructor(){this.name=""}}class r{constructor(){this.won=!1}}function l(t,e){let s=0;const a=e.shieldPercent*e.adaptivePrecision,o=e.armourPercent*e.adaptivePrecision,n=(e.defencePercent-1)*e.adaptivePrecision;for(let h=0,d=t.length;h<d;h++)s+=t[h].totalThreat,s+=t[h].alive.length*e.precision,s+=a*t[h].withShield,s+=o*t[h].withArmour,t[h].isDefence&&(s+=n*t[h].alive.length);const i=Math.random()*s;let r,l=0;for(let h=0,d=t.length;h<d;h++)for(let s=0,u=t[h].ships.length;s<u;s++)if(r=t[h].ships[s],l+=r.threat,t[h].isDefence&&(l+=n),r.shield>0&&(l+=a),r.armour>0&&(l+=o,l+=e.precision),l>=i)return r}function h(t,e,s,a){let o=0,n=t.damage;e.shipData.isDefence&&(n*=t.defencePercent);const i=e.armour>=e.shipData.totalArmour&&e.shield>=e.shipData.totalShield;if(e.shield>0){let i=0;if(n*=t.shieldPercent,n-=e.shipData.shieldReduction,n>0){const r=e.shield;e.shield-=n,e.shield>0?(i=n,n=0):(n=-1*e.shield/t.shieldPercent,i=r,e.shipData.withShield--,e.shipData.withArmour++),e.shipData.stats.rounds[a].damageTaken+=i,e.shipData.stats.rounds[a].shieldDamageTaken+=i,s.shipData.stats.rounds[a].damageDone+=i,s.shipData.stats.rounds[a].shieldDamageDone+=i,s.shipData.stats.rounds[a].aliveTargetsShield++,o+=i}}else s.shipData.stats.rounds[a].aliveTargetsNoShield++;if(n>0&&(n*=t.armourPercent,n-=e.shipData.armourReduction,n>0)){const t=e.armour;e.armour-=n;const i=Math.max(t-e.armour,0);e.shipData.stats.rounds[a].damageTaken+=i,e.shipData.stats.rounds[a].armourDamageTaken+=i,s.shipData.stats.rounds[a].damageDone+=i,s.shipData.stats.rounds[a].armourDamageDone+=i,o+=i}if(o>0&&(s.accumulatedThreat+=o*t.threatMulti),e.shield<=.001&&e.armour>0&&e.armour<e.shipData.explosionThreshold){const t=1-e.armour/e.shipData.explosionThreshold;Math.random()<t&&(e.armour=0,e.shipData.stats.rounds[a].exploded++,s.shipData.stats.rounds[a].explosionTriggered++,e.shipData.explosionDamage>0&&s.armour>0&&h(e.shipData.explosionWeapon,s,e,a))}if(e.armour<=0){const t=e.shipData.alive.indexOf(e);t>=0&&e.shipData.alive.splice(t,1),e.shipData.withArmour--,e.shipData.stats.rounds[a].lost++,s.shipData.stats.rounds[a].kills++,i&&(e.shipData.stats.rounds[a].oneShotted++,s.shipData.stats.rounds[a].oneShotDone++)}}addEventListener("message",({data:t})=>{let e=function(t){const e=new r,s=[t.enemyFleet,t.playerFleet];for(let r=0,l=s.length;r<l;r++)s[r].forEach(t=>{t.ships=[],t.alive=[],t.targets=0===r?s[1]:s[0],t.explosionDamage>0&&(t.explosionWeapon=new o,t.explosionWeapon.shieldPercent=1,t.explosionWeapon.armourPercent=1,t.explosionWeapon.damage=t.explosionDamage),t.totalThreat=t.threat*t.quantity,t.stats=new i,t.stats.name=t.name,t.stats.designId=t.designId,t.stats.player=1===r,t.stats.total=new n,t.stats.total.quantity=t.quantity,t.stats.rounds=new Array(5);for(let e=0,s=t.weapons.length;e<s;e++)t.weapons[e].armourPercent/=100,t.weapons[e].shieldPercent/=100,t.weapons[e].defencePercent/=100;for(let e=0;e<5;e++)t.stats.rounds[e]=new n;for(let e=0;e<t.quantity;e++){const e=new a(t);t.ships.push(e),t.alive.push(e)}t.totalShield>0?(t.withArmour=0,t.withShield=t.quantity):(t.withArmour=t.quantity,t.withShield=0)});for(let a=0;a<5;a++){for(let t=0;t<2;t++){const e=s[t];for(let t=0,s=e.length;t<s;t++){const s=e[t];s.stats.rounds[a].quantity=s.ships.length;for(let t=0,e=s.ships.length;t<e;t++){const e=s.ships[t];for(let t=0,o=s.weapons.length;t<o;t++){const o=l(e.shipData.targets,s.weapons[t]);o&&(o.shipData.stats.rounds[a].shotTaken++,o.shipData.isDefence?e.shipData.stats.rounds[a].defenceHit++:e.shipData.stats.rounds[a].shipHit++,o.armour>0?(e.shipData.stats.rounds[a].aliveTargets++,h(s.weapons[t],o,e,a)):(e.shipData.stats.rounds[a].deathTargets++,o.shipData.stats.rounds[a].shotTakenDeath++))}}}}for(let t=0;t<2;t++){const e=s[t];for(let t=0,s=e.length;t<s;t++){for(let s=0,o=e[t].ships.length;s<o;s++){const o=e[t].ships[s].threat;e[t].stats.rounds[a].threatAvg+=o,e[t].stats.total.threatAvg+=o}e[t].ships.length>0?e[t].stats.rounds[a].threatAvg/=e[t].ships.length:e[t].stats.rounds[a].threatAvg=0,e[t].stats.total.threatQta+=e[t].ships.length}}for(let t=0;t<2;t++){const e=s[t];for(let t=0,s=e.length;t<s;t++){const s=e[t];if(s.ships=s.alive.slice(),s.stats.rounds[a].quantityEnd=s.alive.length,a<4){s.totalThreat=0;for(let t=0,e=s.alive.length;t<e;t++)s.alive[t].threat+=s.alive[t].accumulatedThreat+s.thereatPerRound,s.alive[t].accumulatedThreat=0,s.totalThreat+=s.alive[t].threat}}}for(let t=0;t<2;t++){const e=s[t];let o=0,n=new Array;for(let t=0,s=e.length;t<s;t++){const s=e[t];o+=s.shieldRecharge*s.alive.length;for(let t=0,e=s.alive.length;t<e;t++)s.alive[t].shield>0&&s.alive[t].shield<s.alive[t].shipData.totalShield&&n.push(s.alive[t])}if(o>0&&n.length>0){n=n.sort((t,e)=>(t.shipData.totalShield-t.shield)/t.shipData.totalShield-(e.shipData.totalShield-e.shield)/e.shipData.totalShield);for(let t=0,e=n.length;t<e;t++)if(o>0){const e=n[t].shield;n[t].shield=Math.min(n[t].shield+o,n[t].shipData.totalShield);const s=n[t].shield-e;o-=s,n[t].shipData.stats.rounds[a].shieldRegenerationReceived+=s}}}if(t.enemyFleet.findIndex(t=>t.ships.length>0)<0||t.playerFleet.findIndex(t=>t.ships.length>0)<0)break}e.gameId=t.gameId,e.playerLost=[];for(const a of t.playerFleet){const t=a.quantity-a.ships.length;t>0&&e.playerLost.push({id:a.designId,lost:t})}e.enemyLost=[];for(const a of t.enemyFleet){const t=a.quantity-a.ships.length;t>0&&e.enemyLost.push({id:a.designId,lost:t})}e.stats=[];for(let a=0,o=s.length;a<o;a++)s[a].forEach(t=>{for(let e=0;e<5;e++)t.stats.total.exploded+=t.stats.rounds[e].exploded,t.stats.total.kills+=t.stats.rounds[e].kills,t.stats.total.lost+=t.stats.rounds[e].lost,t.stats.total.quantityEnd=t.alive.length,t.stats.total.oneShotted+=t.stats.rounds[e].oneShotted,t.stats.total.shotTaken+=t.stats.rounds[e].shotTaken,t.stats.total.shotTakenDeath+=t.stats.rounds[e].shotTakenDeath,t.stats.total.aliveTargetsShield+=t.stats.rounds[e].aliveTargetsShield,t.stats.total.aliveTargetsNoShield+=t.stats.rounds[e].aliveTargetsNoShield,t.stats.total.explosionTriggered+=t.stats.rounds[e].explosionTriggered,t.stats.total.oneShotDone+=t.stats.rounds[e].oneShotDone,t.stats.total.deathTargets+=t.stats.rounds[e].deathTargets,t.stats.total.aliveTargets+=t.stats.rounds[e].aliveTargets,t.stats.total.damageDone+=t.stats.rounds[e].damageDone,t.stats.total.armourDamageDone+=t.stats.rounds[e].armourDamageDone,t.stats.total.shieldDamageDone+=t.stats.rounds[e].shieldDamageDone,t.stats.total.damageTaken+=t.stats.rounds[e].damageTaken,t.stats.total.armourDamageTaken+=t.stats.rounds[e].armourDamageTaken,t.stats.total.shieldDamageTaken+=t.stats.rounds[e].shieldDamageTaken,t.stats.total.shieldRegenerationReceived+=t.stats.rounds[e].shieldRegenerationReceived,t.stats.total.shipHit+=t.stats.rounds[e].shipHit,t.stats.total.defenceHit+=t.stats.rounds[e].defenceHit;t.stats.total.threatAvg=t.stats.total.threatQta>0?t.stats.total.threatAvg/t.stats.total.threatQta:0,e.stats.push(t.stats)});return e.endTime=t.endTime,e}(t);postMessage(e),e=null,t=null})}});